"""initial schema

Revision ID: 017a249b5fb6
Revises: 
Create Date: 2025-04-13 10:28:08.622717

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '017a249b5fb6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_electricProjects_g_project_key',
                  table_name='electricProjects')
    op.drop_index('ix_electricProjects_update_timestamp',
                  table_name='electricProjects')
    op.drop_table('electricProjects')
    op.drop_index('ix_electricDummyData_category',
                  table_name='electricDummyData')
    op.drop_index('ix_electricDummyData_data_timestamp',
                  table_name='electricDummyData')
    op.drop_index('ix_electricDummyData_id', table_name='electricDummyData')
    op.drop_index('ix_electricDummyData_province',
                  table_name='electricDummyData')
    op.drop_index('ix_electricDummyData_submit_timestamp',
                  table_name='electricDummyData')
    op.drop_index('ix_electricDummyData_value_tag',
                  table_name='electricDummyData')
    op.drop_index('ix_electricDummyData_zone', table_name='electricDummyData')
    op.drop_table('electricDummyData')
    # ### end Alembic commands ###


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'electricDummyData',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('submit_timestamp',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('data_timestamp',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('category',
                  sa.VARCHAR(length=16),
                  autoincrement=False,
                  nullable=False),
        sa.Column('zone', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('province', sa.VARCHAR(), autoincrement=False,
                  nullable=True),
        sa.Column('value_tag',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('value',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=False),
        sa.PrimaryKeyConstraint('id', name='electricDummyData_pkey'))
    op.create_index('ix_electricDummyData_zone',
                    'electricDummyData', ['zone'],
                    unique=False)
    op.create_index('ix_electricDummyData_value_tag',
                    'electricDummyData', ['value_tag'],
                    unique=False)
    op.create_index('ix_electricDummyData_submit_timestamp',
                    'electricDummyData', ['submit_timestamp'],
                    unique=False)
    op.create_index('ix_electricDummyData_province',
                    'electricDummyData', ['province'],
                    unique=False)
    op.create_index('ix_electricDummyData_id',
                    'electricDummyData', ['id'],
                    unique=False)
    op.create_index('ix_electricDummyData_data_timestamp',
                    'electricDummyData', ['data_timestamp'],
                    unique=False)
    op.create_index('ix_electricDummyData_category',
                    'electricDummyData', ['category'],
                    unique=False)
    op.create_table(
        'electricProjects',
        sa.Column('g_project_key',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=False),
        sa.Column('spp_vspp_rowid',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('e_license_rowid',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('pk_powersystemresource',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('erc_cd', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('org', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('spp_vspp_plant_cd',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('ppa_contract_no',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('project_name',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('spp_vspp_project_name',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('licensee', sa.VARCHAR(), autoincrement=False,
                  nullable=True),
        sa.Column('display_addr',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('subdistrict',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('district', sa.VARCHAR(), autoincrement=False,
                  nullable=True),
        sa.Column('province', sa.VARCHAR(), autoincrement=False,
                  nullable=True),
        sa.Column('country_zone',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('egat_zone',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('contract_status',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('e_license_instl_mw',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=True),
        sa.Column('e_license_instl_kva',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=True),
        sa.Column('installed_cap_mw',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=True),
        sa.Column('contracted_cap_mw',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=True),
        sa.Column('project_type',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('contract_type',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('technology_a_group_1',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('technology_a_group_2',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('technology_a_detail',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('primary_fuel_a_group_1',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('primary_fuel_a_group_2',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('primary_fuel_a_group_3',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('secondary_fuel_a_group_1',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('secondary_fuel_a_group_2',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('secondary_fuel_a_group_3',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('technology_b_group_1',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('technology_b_group_2',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('technology_b_detail',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('primary_fuel_b_group_1',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('primary_fuel_b_group_2',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('primary_fuel_b_group_3',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('secondary_fuel_b_group_1',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('secondary_fuel_b_group_2',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('secondary_fuel_b_group_3',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('utilization',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('scod',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('cod',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('lat',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=True),
        sa.Column('lng',
                  sa.DOUBLE_PRECISION(precision=53),
                  autoincrement=False,
                  nullable=True),
        sa.Column('is_egat_sys_gen',
                  sa.BOOLEAN(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('is_sharing_lic',
                  sa.BOOLEAN(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('licensingno',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('erc_district_no',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('erc_district_displayname',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('month_key',
                  sa.VARCHAR(),
                  autoincrement=False,
                  nullable=True),
        sa.Column('update_timestamp',
                  postgresql.TIMESTAMP(),
                  autoincrement=False,
                  nullable=True),
        sa.PrimaryKeyConstraint('g_project_key', name='electricProjects_pkey'))
    op.create_index('ix_electricProjects_update_timestamp',
                    'electricProjects', ['update_timestamp'],
                    unique=False)
    op.create_index('ix_electricProjects_g_project_key',
                    'electricProjects', ['g_project_key'],
                    unique=False)
    # ### end Alembic commands ###
